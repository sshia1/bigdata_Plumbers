    1  cd
    2  sudo apt update
    3  sudo apt-get update
    4  reboot
    5  cd ..
    6  cd Downloads/
    7  ls
    8  tar xvfz ideaIC-2020.1.2.tar.gz 
    9  exit
   10  apt update
   11  apt upgrade
   12  sudo apt update
   13  sudo apt upgrade
   14  exit
   15  ls
   16  cd Downloads
   17  ls
   18  sudo tar -xzf ideaIC-2020.1.2.tar.gz -C /opt
   19  cd opt
   20  ls
   21  ls -l
   22  sudo tar -xzf ideaIC-2020.1.2.tar.gz -C /opt
   23  ls
   24  exit
   25  ls
   26  cd downloads
   27  cd Downloads
   28  ls
   29  cd ideaIC-2020.1.2.tar.gz
   30  ls -l
   31  cd ideaID-2020.1.2
   32  cd idea-IC-201.7846.76/
   33  ls
   34  cd bin
   35  ls
   36  ls /w
   37  ls -l
   38  idea.sh
   39  .\idea.sh
   40  ./idea.sh
   41  cd Downloads
   42  ls -l
   43  sudo tar -xzf jdk-8u251-linux-i586.tar.gz  -C /opt
   44  ls -w
   45  ls --help
   46  ls -w
   47  ls --help
   48  ls -l
   49  sudo tar -xzf jdk-8u251-linux-i586.tar.gz  -C /opt
   50  ls -l
   51  cd
   52  ls
   53  mkdir opt
   54  ls -l
   55  cd Downloads
   56  ls -l
   57  mv jdk-8u251-linux-i586.tar.gz ../opt
   58  cd ../opt
   59  ls -l
   60  sudo tar -xzf jdk-8u251-linux-i586.tar.gz  
   61  ls -l
   62  cd jdk1.8.0_251/
   63  ls -l
   64  python --version
   65  python -version
   66  python3 -version
   67  python3
   68  python3 -version
   69  python3 -h
   70  python3 -V
   71  java -V
   72  cd ..
   73  cd Downloads
   74  ls
   75  installsbt
   76  installsbt.sh
   77  shell installsbt.sh
   78  type installsbt.sh
   79  cat installsbt.sh
   80  installsbt.sh
   81  ./installsbt.sh
   82  chmod +x installsbt.sh
   83  ./installsbt.sh
   84  ls
   85  echo $ORACLE_HOME
   86  date
   87  TZ=GMT date
   88  date
   89  date -d now
   90  date
   91  date -d yesterday
   92  date
   93  date -d tomorrow
   94  date
   95  date -d now
   96  date
   97  df
   98  df -h
   99  whatis whatis
  100  whatis df
  101  free
  102  whatis free
  103  ps
  104  whatis ps
  105  uptime
  106  whatis uptime
  107  w
  108  whatis w
  109  w
  110  password
  111  whatis password
  112  passwd
  113  whatis exit
  114  exit
  115  whatis shutdown
  116  mkdir
  117  mdir --help
  118  mkdir --help | more
  119  whatis more
  120  rmdir
  121  rmdir --help
  122  rm
  123  rm --help
  124  whatis rm
  125  mv
  126  mv --help
  127  whatis mv
  128  cp
  129  cp --help
  130  whatis cp
  131  cat
  132  clear
  133  echo "t1" > t1.txt
  134  cat t1.txt
  135  echo "t2" > t2.txt
  136  cat t2.txt
  137  cat t1.txt t2.txt
  138  echo "1 2 3" t3.txt
  139  cat t3.txt
  140  echo "1 2 3" > t3.txt
  141  cat t3.txt
  142  tac t3.txt
  143  cat t1.txt t2.txt
  144  tac t1.txt t2.txt
  145  tac t1.txt t2.txt t3.txt
  146  cat t1.txt t2.txt t3.txt
  147  help tac
  148  whatis tac
  149  tac --help
  150  grep "1" t3.txt
  151  zip t.zip t1.txt t2.txt t3.txt
  152  ls
  153  unzip t.zip
  154  sudo
  155  sudo --help
  156  sudo --help | more
  157  sudo -i
  158  head -1 t3.txt
  159  tail -1 t3.txt
  160  history
  161  history | more
  162  help
  163  help | more
  164  man vim
  165  dir
  166  ls
  167  ls -ltr
  168  cd
  169  cd .
  170  cd ~
  171  cd ..
  172  ls
  173  cd field
  174  ls
  175  cd $HOME
  176  pwd
  177  clear
  178  whereis
  179  whereis whereis
  180  whereis zip
  181  hep
  182  help
  183  whreeis help
  184  whereis cat
  185  whatis whatis
  186  whatis cat
  187  whatis help
  188  whatis zip
  189  shutdown --help
  190  shutdown
  191  shutdown -c
  192  shutdown -H
  193  history
  194  history | more
  195  dir
  196  ls
  197  dir
  198  cd Downloads
  199  dir
  200  ls
  201  sudo gedit test.txt
  202  vi test.txt
  203  clear
  204  alias
  205  alias --help
  206  clear
  207  dir
  208  cd ..
  209  dir
  210  cd opt
  211  dir
  212  rm -rf *.*
  213  dir
  214  https://javadl.oracle.com/webapps/download/AutoDL?BundleId=239835_230deb18db3e4014bb8e3e8324f81b43
  215  sudo wget https://javadl.oracle.com/webapps/download/AutoDL?BundleId=239835_230deb18db3e4014bb8e3e8324f81b43
  216  dir
  217  ls
  218  cd jdk1.8.0_251/
  219  dir
  220  cd ..
  221  ls
  222  dir
  223  cd ..
  224  sudo gedit .bash_profile 
  225  source .bash_profile
  226  java -version
  227  ls
  228  sudo gedit .bash_profile 
  229  source  .bash_profile
  230  java -version
  231  sudo gedit .bash_profile 
  232  source  .bash_profile
  233  java -version
  234  sudo gedit .bash_profile 
  235  source  .bash_profile
  236  sudo gedit .bash_profile 
  237  java -version
  238  cd opt/jdk1.8.0_251/
  239  ls
  240  ls bin
  241  ls jre
  242  ls lib
  243  ls man
  244  dir
  245  pwd
  246  cd
  247  cd opt/jdk1.8.0_251/
  248  pwd
  249  cd
  250  source .bash_profile 
  251  java -version 
  252  whereis jaca
  253  whereis java
  254  cd /usr/share/java
  255  dir
  256  rm *.*
  257  sudo rm *.*
  258  ls
  259  cd ..
  260  rmdir java
  261  sudo rmdir java
  262  ls
  263  cd java
  264  cd ~
  265  cd opt
  266  cd ..
  267  java -version
  268  path
  269  echo $PATH
  270  source .bash_profile
  271  java -version
  272  whereis java
  273  source .bash_profile
  274  java -version
  275  cd opt/
  276  ls 
  277  rm AutoDL\?BundleId\=239835_230deb18db3e4014bb8e3e8324f81b43 
  278  ls 
  279  cd jdk1.8.0_251/
  280  ls 
  281  cdd 
  282  cd
  283  gedit .bash_profile 
  284  sudo gedit .bash_profile 
  285  source .bash_profile 
  286  java -version
  287  reboot
  288  cd opt
  289  ls
  290  cd scala-2.11.8/
  291  pwd
  292  sudo apt-get update
  293  sudo apt-get install git-core
  294  git status
  295  git config --global user.name "sshia1"
  296  git config --global user.email "sshia1@outlook.com"
  297  git config list
  298  ssh-keygen -C "sshia1@outlook.com"
  299  ssh-add
  300  cd Documents
  301  ls
  302  ls -l
  303  git -clone "https://github.com/sshia1/bigdata_Plumbers"
  304  git clone "https://github.com/sshia1/bigdata_Plumbers"
  305  ls -a
  306  cd bigdata_Plumbers/
  307  ls -a
  308  cd ..
  309  cd abc/
  310  cd bigdata_Plumbers
  311  ls
  312  sudo gedit readme.txt
  313  ls
  314  cat readme.txt
  315  ls
  316  git add .
  317  git commit -m "readme file"
  318  git push origin master
  319  la -a
  320  mkdir 001_installation
  321  mkdir 002_wordCount
  322  git add .
  323  git commit -m "update"
  324  git push origin master
  325  la -a
  326  cd 002_wordCount
  327  jps
  328  git add .
  329  git commit -m "update"
  330  git push origin master
  331  cd ..
  332  cd 001_installation
  333  echo "Readme" > readme.txt
  334  cd ..
  335  cd..
  336  cd ..
  337  ssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa
  338  cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
  339  chmod 0600 ~/.ssh/authorized_keys
  340  wget http://mirror.cc.columbia.edu/pub/software/apache/hadoop/common/hadoop-3.1.3/hadoop-3.1.3.tar.gz
  341  tar xzf hadoop-3.1.3.tar.gz 
  342  ls
  343  rm hadoop-3.1.3.tar.gz
  344  cd hadoop-3.1.3/
  345  pwd
  346  cd etc
  347  ls
  348  cd hadoop
  349  ls
  350  sudo gedit hadoop-env.sh
  351  sudo gedit core-site.xml 
  352  sudo gedit mapred-site.xml
  353  sudo gedit hdfs-site.xml 
  354  sudo gedit .bash_profile
  355  ls
  356  gedit .bash_profile
  357  source .bash_profile
  358  hdfs namenode -format
  359  source .bash_profile
  360  hdfs namenode -format
  361  ecoh $HADOOP_YARN_HOME
  362  echo $HADOOP_YARN_HOME
  363  set
  364  set | more
  365  hdfs namenode -format
  366  cd opt
  367  cd hadoop-3.1.3/
  368  cd etc
  369  cd hadoop
  370  grep "HADOOP_YARN_HOME"
  371  grep "HADOOP_YARN_HOME"*.*
  372  grep HADOOP_YARN_HOME .
  373  grep HADOOP_YARN_HOME *.*
  374  cd ..
  375  grep -r "HADOOP_YARN_HOME" *.*
  376  grep -help
  377  grep --help
  378  grep -r "HADOOP_YARN_HOME" *.*
  379  grep  "HADOOP_YARN_HOME" *.*
  380  ls
  381  cd etc
  382  ls
  383  cd hadoop
  384  grep "HADOOP_YARN_HOME" *.*
  385  echo $HADOOP_MAPRED_HOME
  386  set HADOOP_YARN_HOME=$HADOOP_MAPRED_HOME
  387  cd ..
  388  hdfs namenode -format
  389  echo $HADOOP_YARN_HOME
  390  cd opt
  391  ls
  392  cd hadoop-3.1.3/
  393  ls
  394  cd etc
  395  cd hadoop
  396  ls
  397  cd ..
  398  ls
  399  cd hdfs
  400  cd namenode
  401  pwd
  402  cd ..
  403  ls
  404  cd ..
  405  cd etc
  406  ls
  407  cd hadoop
  408  ls
  409  sudo edit yarn-site.xml
  410  sudo gedit yarn-site.xml
  411  cd ..
  412  ls
  413  source .bash_profile
  414  hdfs namenode -format
  415  ls
  416  cd opt
  417  cd hadoop-3.1.3/
  418  cd hdfs
  419  ls
  420  cd ..
  421  ls
  422  cd ..
  423  hdfs namenode -format
  424  source .bash_profile
  425  hdfs namenode -format
  426  path
  427  echo $PATH
  428  cat .bash_profile
  429  sudo gedit .bash_profile
  430  source .bash_profile
  431  path
  432  echo $PATH
  433  hdfs namenode -format
  434  cd opt
  435  cd hadoop-3.1.3/
  436  cd etc
  437  cd hadoop
  438  ls
  439  sudo gedit yarn-site.xml
  440  ls
  441  cat core-site.xml
  442  cd ..
  443  cd ~
  444  hdfs namenode -format
  445  ls
  446  cd opt/hadoop-3.1.3/
  447  cd etc/hadoop
  448  ls
  449  cat yarn-site.xml
  450  echo $PATH
  451  cd ..
  452  source .bash_profile
  453  hdfs namenode -format
  454  cd opt/hadoop-3.1.3/etc/hadoop
  455  ls
  456  cat yarn-en.sh
  457  cat yarn-env.sh
  458  ls
  459  mv hadoop-3.1.3/ opt
  460  cd opt
  461  ls
  462  cd hadoop-3.1.3/
  463  mkdir hdfs
  464  cd hdfs
  465  ls
  466  mkdir namenode
  467  mkdir datanode
  468  ls
  469  cd ..
  470  cd hadoop
  471  ls
  472  cd etc
  473  ls
  474  cd hadoop
  475  sudo gedit hdfs-site.xml
  476  cd opt/hadoop-3.1.3/
  477  pwd
  478  cd ..
  479  ls
  480  cd jdk1.8.0_221
  481  pwd
  482  cd ~
  483  java -version
  484  cd opt
  485  cd hadoop-3.1.3/
  486  cd etc/hadoop
  487  ls
  488  sudo gedit core-site.xml
  489  sudo gedit hdfs-site.xml
  490  ls
  491  cd ..
  492  ls
  493  cd hdfs
  494  ls
  495  cd $HOME
  496  sudo apt update
  497  sudo apt install software-properties-common
  498  sudo add-apt-repository ppa:deadsnakes/ppa
  499  sudo apt install python3.7
  500  python3.7 --version
  501  cat .bash_profile
  502  la -a
  503  cd Downloads
  504  ls
  505  cd ..
  506  cd opt
  507  ls
  508  cd ..
  509  ls
  510  path
  511  echo $PATH
  512  python3.7
  513  whereis python3.8
  514  whereis python3.7
  515  jps
  516  source .bash_profile
  517  start-all.sh
  518  jps
  519  hdfs dfs -mkdir /temp
  520  hdfs dfs -ls /
  521  cd Documents/
  522  ls
  523  echo "test" > test.txt
  524  ls
  525  mv test.txt test1.txt
  526  hdfs dfs -put test1.txt /temp
  527  cd opt/hadoop-3.1.3/
  528  cd lib
  529  ls
  530  cd ../opt/hadoop-3.1.3
  531  cd lib
  532  ls
  533  cd $HOME/Documents
  534  hdfs dfs -put test1.txt /temp1
  535  hdfs dfs -ls /temp
  536  hdfs dfs -cat /temp/test1.txt
  537  cd $HOME/Downloads
  538  ls *.txt
  539  ls
  540  cd ..
  541  ls
  542  cd Documents
  543  ls
  544  cd ..
  545  cd Downloads
  546  ls
  547  cd ..
  548  ls
  549  cd Documents
  550  ls
  551  cd ..
  552  cd Downloads
  553  ls
  554  hdfs dfs -ls
  555  hdfs dfs -ls /
  556  hdfs dfs -ls /temp
  557  hdfs dfs -ls /temp1
  558  hdfs dfs -ls /
  559  hdfs dfs -mkdir /temp2
  560  hdfs dfs -ls /
  561  hdfs dfs -mv Shakespeare.txt /temp2
  562  ls *.txt
  563  hdfs dfs -put Shakespeare.txt /temp2
  564  hdfs dfs -ls /temp2
  565  hdfs dfs -ls /
  566  source .bash_profile
  567  start-all.sh
  568  start
  569  cd ..
  570  start
  571  start-yarn.sh
  572  start-dfs.sh
  573  jps
  574  start-yarn.cmd
  575  whereis start-yarn.cmd
  576  pip install --upgrade pip
  577  pip3 install --upgrade pip
  578  sudo apt install python3-pip
  579  pip3 install --upgrade pip
  580  pip3 install --upgrade -r requirements.txt
  581  cat .bash_profile
  582  python
  583  python3
  584  whereis python3
  585  cd /usr/bin/python3
  586  cd /usr/bin
  587  ls
  588  ls python*.*
  589  cd/$HOME
  590  cd /$HOME
  591  cat .bash_profile
  592  pip3 install pydoop
  593  sudo gedit wc.py
  594  sudo gedit stop.txt
  595  pydoop script wc.py hdfs_input hdfs_output --upload-file-to-cache stop.txt
  596  sudo apt-get install build-essential python-dev
  597  echo $HADOOP_HOME
  598  python3 setup.py build
  599  pydoop script wc.py hdfs_input hdfs_output --upload-file-to-cache stop.txt
  600  pip3 install pydoop
  601  cd /usr/lib/python3
  602  ls
  603  cd dist-packages
  604  ls
  605  ls py*.*
  606  ls
  607  ls | more
  608  ls
  609  pip3 install pydoop
  610  whereis python3
  611  cat .bash_profile
  612  sudo apt-get install build-essential checkinstall
  613  sudo apt-get install libreadline-gplv2-dev libncursesw5-dev libssl-dev     libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev zlib1g-dev
  614  cd opt
  615  sudo wget https://www.python.org/ftp/python/3.8.3/Python-3.8.3.tgz
  616  sudo tar xzf Python-3.8.3.tgz 
  617  ls
  618  cd Python-3.8.3/
  619  sudo ./Configure --enable-optimizations
  620  sudo ./configure --enable-optimizations
  621  sudo make altinstall
  622  python 3.8 -V
  623  python3.8 -V
  624  cd ..
  625  ls
  626  rm Python-3.8.3.tgz
  627  ls
  628  cd ..
  629  cat .bash_profile
  630  sudo gedit .bash_profile
  631  cat .bash_profile
  632  echo $PYTHON_HOME
  633  source .bash_profile
  634  
  635  echo $PATH
  636  python3.8 -V
  637* 
  638  pip install mrjob
  639  pip3 install mrjob
  640  sudo gedit mr_word_count.y
  641  ls
  642  mv mr_word_count.y mr_word_count.py
  643  ls
  644  python3.8.3 mr_word_count.py stop.txt
  645  ls
  646  cd opt
  647  ls
  648  python3.8.3
  649  cd Python-3.8.3
  650  cd bin
  651  ls
  652  cd ..
  653  ls
  654  python3.8 mr_word_count.py stop.txt
  655  ls
  656  cd Documents
  657  ls
  658  cd ..
  659  cd Downloads
  660  ls
  661  cp Shakespeare.txt ..
  662  cd ..
  663  ls
  664  sudo gedit Shakespeare.txt
  665  sudo gedit test.txt
  666  cat test.txt
  667  ls
  668  sudo gedit test.py
  669  python3.8 test.py test.txt
  670  cat test.txt
  671  hdfs dfs -put test.txt /temp2
  672  hdfs dfs -ls /temp2
  673  hdfs dfs -pwd /temp2
  674  hdfs dfs -ls /temp2
  675  python3.8 test.py test.txt
  676* 
  677  python3.8 test.py test.txt
  678  hdfs dfs -ls /temp2
  679  hdfs dfs -ls 
  680  pwd
  681  hdfs dfs -ls /user/field/temp2
  682  hdfs dfs -ls /
  683  hadoop fs -ls /
  684  hadoop fs -ls /field
  685  hadoop fs -ls hdfs://
  686  hadoop fs -ls hdfs:///temp2
  687  hadoop fs -ls hdfs:///temp2/teset.txt
  688  hadoop fs -ls hdfs:///temp2/test.txt
  689  python3.8 test.py -r hadoop hdfs:///temp2/test.txt
  690* 
  691  hadoop fs -ls hdfs:///temp2/test.txt
  692  python3.8 test.py test.txt --output-dir hdfs://temp2/test.out
  693  python3.8 test.py test.txt --output-dir hdfs:///temp2/test.out
  694  hdfs dfs -ls hdfs:///temp2
  695  ls
  696  cat test.py
  697  python3.8 test.py test.txt 
  698  cp test.py mapreduce.py
  699  ls *.txt
  700  python3.8 mapreduce.py Shakespeare.txt
  701  python3.8 mapreduce.py Shakespeare.txt > t.out
  702  cat t.out | more
  703  sudo apt-get update
  704  sudo apt-get install mysql server
  705  sudo apt-get install mysql -server5.7
  706  sudo apt-get install mysql -server
  707  cd Downloads
  708  ls *.odt
  709  cat 'mySQL server Install.odt' | more
  710  cd ..
  711  cd Downloads
  712  dir *.odt
  713  clear
  714  cls
  715  ls
  716  sudo apt-get mysql-server
  717  sudo apt-get install mysql-server
  718  sudo ufw enable
  719  sudo ufw allow mysql
  720  sudo systemctl start mysql
  721  systemctl status mysql service
  722  update mysql.user set authentication_string=password('password') where user='root'
  723  update mysql.user set authentication_string=password('password') where user='root';
  724  UPDATE mysql.user SET authentication_string=PASSWORD('password') where user='root';
  725  UPDATE mysql.user SET authentication_string = PASSWORD('password') where user='root';
  726  UPDATE mysql.user SET authentication_string = PASSWORD('password') where User='root';
  727  UPDATE mysql.user SET authentication_string = PASSWORD('password') where User = 'root';
  728  UPDATE mysql.user SET authentication_string = PASSWORD("'password'") where User = 'root';
  729  UPDATE mysql.user SET authentication_string = "PASSWORD"('password') where User = 'root';
  730  UPDATE mysql.user SET authentication_string = "PASSWORD(password)" where User = 'root';
  731  mysql
  732  /usr/bin/mysql -u root -p
  733  sudo /usr/bin/mysql -u root -p
  734  ls
  735  exit
  736  ls
  737  mv "100 Records.csv" hr.csv
  738  ls
  739  sudo /usr/bin/mysql -u root -p
  740  sudo mysql --local-infile=1 -u root -pl
  741  exit
  742  ls
  743  wget -qO- https://deb.opera.com/archive.key | sudo apt-key add -
  744  sudo add-apt-repository "deb [arch=i386,amd64] https://deb.opera.com/opera-stable/ stable non-free"
  745  sudo apt install opera-stable
  746  ls
  747  sudo /usr/bin/mysql -u root -p
  748  mysql --local-infile=1 -u root -p1
  749  sudo mysql --local-infile=1 -u root -p1
  750  ls
  751  cd Documents
  752  ls
  753  dir
  754  ls -l
  755  cd ..
  756  cd Documents
  757  ls
  758  cd bigdata_Plumbers
  759  ls
  760  mkdir 003_MRJOBS_MapReduce
  761  mkdir 004_MySQL
  762  mkdir 000_IBM_Certifications
  763  cd ~/Downloads
  764  ls
  765  cp db_plumbers-employee.csv ../Documents/bigdata_Plumbers
  766  cp db_plumbers-hr.csv ../Documents/bigdata_Plumbers
  767  cp SQL-solution-John-Shia.odt ../Documents/bigdata_Plumbers
  768  ls
  769  cd ..
  770  ls
  771  cp mapreduce.py Documents/bigdata_Plumbers
  772  cp Shakespeare.txt Documents/bigdata_Plumbers
  773  more < t.out
  774  ls t.out
  775  mv t.out mapreduce_output.txt
  776  mv mapreduce_output.txt Documents/bigdata_Plumber
  777  ls
  778  cd Documents
  779  ls
  780  cd ..
  781  ls
  782  cd Downloads
  783  ls
  784  cd ..
  785  cd Documents
  786  ls
  787  cat bigdata_Plumber
  788  ls
  789  mv bigdata_Plumber mapreduce_output.txt
  790  ls
  791  cat test1.txt
  792  mv 'IBMDeveloperSkillsNetwork CC0101EN Certificate _ Cognitive Class.pdf' bigdata_Plumbers
  793  mv 'Cognitive Class BD0101EN Certificate _ Cognitive Class.pdf' bigdata_Plumbers
  794  ls
  795  mv mapreduce_output.txt bigdata_Plumbers
  796  cd bigdata_Plumbers
  797  ls
  798  mv 'Cognitive Class BD0101EN Certificate _ Cognitive Class.pdf'  000_IBM_Certifications/
  799  mv 'IBMDeveloperSkillsNetwork CC0101EN Certificate _ Cognitive Class.pdf' 000_IBM_Certifications/
  800  ls
  801  mv db_plumbers-employee.csv 004_MySQL
  802  mv db_plumbers-hr.csv 004_MySQL
  803  mv mapreduce.py 003_MRJOBS_MapReduce/
  804  mv mapreduce_output.txt 003_MRJOBS_MapReduce/
  805  ls
  806  mv Shakespeare.txt 003_MRJOBS_MapReduce/
  807  mv SQL-solution-John-Shia.odt 004_MySQL
  808  ls
  809  git add .
  810  git commit -m "update"
  811  git push origin master
  812  history > history.out
